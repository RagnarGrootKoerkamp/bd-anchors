* Minimizer reference implementations

This repository implements various types of sampling schemes and accompanies
the mod-minimizer preprint:

- *Ragnar Groot Korekamp, Giulio Ermanno Pibiri.* "The mod-minimizer: a simple
  and efficient sampling algorithm for long $k$-mers". bioRxiv (2024). [[https://doi.org/10.1101/2024.05.25.595898][10.1101/2024.05.25.595898]]

See also my corresponding blogpost: [[https://curiouscoding.nl/posts/minimizers/][curiouscoding.nl/posts/minimizers]].

Implemented sampling schemes:
- *Random minimizers*.
- two versions of asymptotically optimal *Rotational minimizers* (Mar√ßais et al., 2018) .
- *Miniception*, and a small slightly improved variant of it.
- *Decycling* and *double decycling* based minimizers (Pellow et al., 2023).
- *Bidirectional anchors* (Loukides et al., 2023)
- *Mod-sampling*, with *lr-minimizers* and *mod-minimizers* (our work).

Density plot for $\sigma=4$. Reproduce using:
- ~cargo run -r -- -n 5000000 -s 4 eval -o data/density_4.json~
- ~plot.ipynb~

[[file:./fig/density_4.svg]]

* Fast random minimizers
Additionally, the =benches/blog= directory contains a fast implementation of
ntHash and a fast random minimizer implementation on top of that. This computes
the minimizers of a human genome in under half a second, or =0.16ns/window=.

See the corresponding blogpost for details: [[https://curiouscoding.nl/posts/fast-minimizers/][curiouscoding.nl/posts/fast-minimizers]]
